#!/bin/sh
memloc=(stack heap global)
class=(independent inherited)
type=(object_bounds_overflow sub_object_bounds_overflow type_confusion use_after_free reuse_after_free fake_object)
pointer=(vptr object_ptr)
vtable=(reuse injection)
constructor=(default custom)
exploit=(true false)
attack_id=1

rm output.txt

echo "| Index |          Attack Type          | Memory Location | Class Heirarchy | Pointer | Vtable | Constructor | Exploit | Result |" >> output.txt
echo "|-------|-------------------------------|-----------------|-----------------|---------|--------|-------------|---------|--------|" >> output.txt

for o in "${exploit[@]}"
do
  for i in "${memloc[@]}"
  do
    for j in "${class[@]}"
    do
      for k in "${type[@]}"
      do
        for l in "${pointer[@]}"
        do
          for m in "${vtable[@]}"
          do
            for n in "${constructor[@]}"
            do
                if [ $l == "object_ptr" ] && [ $m == "injection" ]; then
                    continue
                elif [ $i == "global" ] && [ $k == "reuse_after_free" ]; then
                    continue
                elif [ $i == "global" ] && [ $k == "use_after_free" ]; then
                    continue
                else
                  ./$1 $i $j $k $l $m $n $o
      	           output=$(./$1 $i $j $k $l $m $n $o)
                   if [[ $output == *"HIJACKED"* ]]; then
                     output="X"
                   elif [[ $o == "false" ]] && [[ ! $output == *"OK"* ]]; then
                     output="X"
                   else
                     output=" "
                   fi
                   echo "|$attack_id|$k|$i|$j|$l|$m|$n|$o|$output|" >> output.txt
                   ((attack_id++))
                 fi
            done
          done
        done
      done
    done
  done
done
echo ""
echo "####################################################### Summary ################################################################"
echo ""
cat output.txt
